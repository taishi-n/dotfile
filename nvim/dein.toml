[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'dkarter/bullets.vim'
hook_add = '''
   let g:bullets_enabled_file_types = [
       \ 'markdown',
       \ 'text',
       \ 'gitcommit',
       \ 'scratch'
       \]
'''

[[plugins]]
repo = 'fatih/vim-go'

[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = '''
   let g:vim_markdown_conceal = 0
   let g:vim_markdown_folding_disabled = 1
   let g:vim_markdown_new_list_item_indent = 2
   let g:vim_markdown_auto_insert_bullets = 1
   let g:vim_markdown_new_list_item_indent = 1
   let g:vim_markdown_emphasis_multiline = 0
'''
on_ft = ['md','markdown','mkd']

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'ambv/black'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'cohama/lexima.vim'
hook_add = '''
   let g:lexima_enable_endwise_rules = 1
   call lexima#add_rule({'char': '$', 'input_after': '$', 'filetype': 'tex'})
   call lexima#add_rule({'char': '$', 'at': '%#$', 'leave': 1, 'filetype': 'tex'})
   call lexima#add_rule({'char': '', 'at': '$%#$', 'delete': 1, 'filetype': 'tex'})

   " to avoid the confliction of deoplete
   " let g:lexima_no_default_rules = 1
   " call lexima#set_default_rules()
   imap <expr> <CR> pumvisible() ? "\<C-y>" : "\<CR>"
'''

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
   let g:user_emmet_settings = { 'lang' : 'ja' }
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
   set signcolumn=yes
   set updatetime=1000

   nnoremap [gitgutter] <Nop>
   nmap <C-h> [gitgutter]
   nmap [gitgutter]j <Plug>GitGutterNextHunk
   nmap [gitgutter]k <Plug>GitGutterPrevHunk
   nmap [gitgutter]u <Plug>GitGutterUndoHunk
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
   nmap [fugitive] <Nop>
   map <Leader>g [fugitive]
   nmap <silent> [fugitive]s :<C-u>Gstatus<CR>
   nmap <silent> [fugitive]d :<C-u>Gdiff<CR>
   nmap <silent> [fugitive]b :<C-u>Gblame<CR>
   nmap <silent> [fugitive]l :<C-u>Glog<CR>
'''

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_add = '''
   let g:tex_flavor = "latex"
   let g:vimtex_compiler_latexmk_engines = { '_' : '-pdfdvi' }
   let g:latex_latexmk_enabled = 1
   let g:vimtex_view_general_viewer
         \ = '/Applications/Preview.app/Contents/MacOS/Preview'
   let g:vimtex_view_general_options = '-ga'
   let g:latex_latexmk_options = '-pdfdvi -latex=uplatex -synctex=1 -halt-on-error'
   let g:latex_view_method = 'general'
   let g:latex_view_general_viewer = 'open'
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
   let g:airline_theme='bubblegum'
   let g:airline_solarized_bg='dark'
   let g:airline_powerline_fonts = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
   " C++ compiler setting
   let g:syntastic_cpp_compiler="g++-9"

   " Ctrl + kで次の指摘へ、Ctrl + jで前の指摘へ移動
   nmap <silent> <C-k> <Plug>(ale_previous_wrap)
   nmap <silent> <C-j> <Plug>(ale_next_wrap)

   " Lint only file saved
   let g:ale_lint_on_text_changed = 0
   let g:ale_linters = {
      \ 'cpp': ['gcc'],
      \ 'python': ['black'],
      \ 'tex': ['alex', 'chktex'],
      \ }
   let g:ale_fixers = {
      \ 'python': ['black'],
      \ 'tex': ['alex', 'chktex'],
      \ }

   " モードの表示名を定義(デフォルトだと長くて横幅を圧迫するので略称にしている)
   let g:airline_mode_map = {
      \ '__' : '-',
      \ 'n'  : 'N',
      \ 'i'  : 'I',
      \ 'R'  : 'R',
      \ 'c'  : 'C',
      \ 'v'  : 'V',
      \ 'V'  : 'V',
      \ 's'  : 'S',
      \ 'S'  : 'S',
      \ }
   highlight link ALEErrorSign Tag
   highlight link ALEWarningSign StorageClass

   let g:ale_sign_error = '✘'
   let g:ale_sign_warning = '⚠'
   let g:ale_echo_msg_format = '[%linter%]%code: %%s'
   let g:airline#extensions#ale#close_lnum_symbol = ')'
   let g:airline#extensions#ale#enabled = 1
   let g:airline#extensions#ale#error_symbol = 'E:'
   let g:airline#extensions#ale#open_lnum_symbol = '('
   let g:airline#extensions#ale#warning_symbol = 'W:'
   let g:airline#extensions#tabline#enabled = 1
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
   let g:indentLine_setConceal = 0
'''
