[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'fatih/vim-go'

[[plugins]]
repo = 'majutsushi/tagbar.git'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline_mode_map = {
    \ '__' : '-',
    \ 'n'  : 'N',
    \ 'i'  : 'I',
    \ 'R'  : 'R',
    \ 'c'  : 'C',
    \ 'v'  : 'V',
    \ 'V'  : 'V',
    \ ''   : 'V',
    \ 's'  : 'S',
    \ 'S'  : 'S',
    \ }
let g:airline_powerline_fonts = 1
let g:airline_theme = 'badwolf'
let g:airline#extensions#tabline#enabled = 1
let g:airline_section_z = airline#section#create(['windowswap', '%3p%% ', 'linenr', ':%3v'])
let g:airline#extensions#virtualenv#enabled = 1
let g:airline#extensions#hunks#enabled = 0
let g:airline#extensions#ale#enabled = 1
let g:airline#extensions#ale#error_symbol = 'E:'
let g:airline#extensions#ale#warning_symbol = 'W:'
'''

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
   let g:user_emmet_settings = { 'lang' : 'ja' }
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
   set signcolumn=yes
   set updatetime=1000

   nnoremap [gitgutter] <Nop>
   nmap <C-h> [gitgutter]
   nmap [gitgutter]j <Plug>GitGutterNextHunk
   nmap [gitgutter]k <Plug>GitGutterPrevHunk
   nmap [gitgutter]u <Plug>GitGutterUndoHunk
'''


[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
nmap [figitive] <Nop>
map <Leader>g [figitive]
nmap <silent> [figitive]s :<C-u>Gstatus<CR>
nmap <silent> [figitive]d :<C-u>Gdiff<CR>
nmap <silent> [figitive]b :<C-u>Gblame<CR>
nmap <silent> [figitive]l :<C-u>Glog<CR>
'''

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_add = '''
   let g:tex_flavor = "latex"
   let g:vimtex_compiler_latexmk_engines = { '_' : '-pdfdvi' }
   let g:latex_latexmk_enabled = 1
   let g:vimtex_view_general_viewer
         \ = '/Applications/Preview.app/Contents/MacOS/Preview'
   let g:vimtex_view_general_options = '-ga'
   let g:latex_latexmk_options = '-pdfdvi -latex=uplatex -synctex=1 -halt-on-error'
   let g:latex_view_method = 'general'
   let g:latex_view_general_viewer = 'open'

   " for neocomplete
   if !exists('g:neocomplete#sources#omni#input_patterns')
     let g:neocomplete#sources#omni#input_patterns = {}
   endif
   let g:neocomplete#sources#omni#input_patterns.tex = '\\ref{\s*[0-9A-Za-z_:]*'
   let g:neocomplete#sources#omni#input_patterns.tex = '\\cite{\s*[0-9A-Za-z_:]*\|\\ref{\s*[0-9A-Za-z_:]*'
'''
